---
newsletterTitle: "#38 Stefan's Newsletter"
title: "Background tasks and how to use them. Stale Cache example in C#"
subtitle: "In .NET, background tasks are asynchronous operations that run independently of the main application thread.
They are used to perform tasks that should not block the main thread, such as long-running computations, I/O operations, or tasks that can be executed concurrently."
date: "Oct 23 2023"
photoUrl: "/images/blog/newsletter21.png"
---

### The background
<br>
<br>
##### In .NET, <b><span style='color: #ffbd39'>background tasks </span></b> are asynchronous operations that run independently of the main application thread.
<br>
##### They are used to perform tasks that should not block the main thread, such as long-running computations, I/O operations, or tasks that can be executed concurrently.
<br>
##### Let's see how to implement this feature.

<br>
<br>
### Simple Implementation
<br>
<br>

##### There are various ways to implement background tasks in .NET, but one common approach is to use asynchronous programming with async and await.
<br>
##### This allows you to run code in the background without blocking the main thread.
<br>
##### Here's an example of how to create and execute a background task in a console application:

<br>
<br>
### Real-world use cases in applications
<br>
<br>
#####  <b><span style='color: #ffbd39'>1. Email Notifications:</span></b> 
<br>
##### • <b>Why</b>: Sending email notifications can be time-consuming and subject to network delays. You don't want the main application thread to wait for email deliveries to complete.
<br>
##### • <b>How</b>: Use a background task to send email notifications asynchronously, allowing the main application to continue processing user requests without delays.
<br>
#####  <b><span style='color: #ffbd39'>2. Image and File Processing:</span></b> 
<br>
##### • <b>Why</b>: Tasks like image resizing, file uploads, or video transcoding can be resource-intensive and time-consuming.
<br>
##### • <b>How</b>: Offload these tasks to background threads or processes, allowing the main thread to serve user requests promptly without experiencing delays. 

<br>
#####  <b><span style='color: #ffbd39'>3. Database Cleanup and Maintenance:</span></b> 
<br>
##### • <b>Why</b>: In applications with databases, routine maintenance tasks like archiving, purging old data, or reindexing can be crucial but time-consuming.
<br>
##### • <b>How</b>: Implement background tasks to perform database maintenance activities during non-peak hours, preventing these tasks from affecting the application's responsiveness during regular usage.

<br>
#####  <b><span style='color: #ffbd39'>4. Cache Maintenance:</span></b> 
<br>
##### • <b>Why</b>: Caches can accumulate stale data over time, leading to inefficiency and increased memory usage.
<br>
##### • <b>How</b>: Use background tasks to periodically clean up expired or unnecessary cache items, ensuring that the cache remains efficient and doesn't impact application performance.
<br>
##### • Let's take this example and implement a background task on it.


<br>
<br>
### Clearing cache with background task
<br>
<br>

##### You can create a background task that runs at regular intervals, such as once an hour or once a day, to check the cached items for expiration. Each cached item can have a timestamp or a time-to-live (TTL) value associated with it to indicate when it should be considered stale.

<br>
<div style="border: 1px solid #3C3C3C; background-color: #1E1E1E; padding: 15px; border-radius: 5px; font-family: 'Courier New', monospace; font-size: 14px; color: #D4D4D4;">
    <span style="color: #569CD6;">class </span> <span style="color: #4EC9B0;">Program</span><br>
    {<br>
        &nbsp;&nbsp;&nbsp;<span style="color: #569CD6;">static async </span> <span style="color: #4EC9B0;">Task </span> <span style="color: #D4D4D4;">Main</span>(<span style="color: #569CD6;">string[]</span> args)<br>
        &nbsp;&nbsp;&nbsp;{<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #569CD6;">var</span> cacheManager = <span style="color: #D4D4D4;">new</span> <span style="color: #4EC9B0;">CacheManager</span>();<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #608B4E;">// Add items to the cache</span><br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cacheManager.<span style="color: #eded00;">AddItem</span>(<span style="color: #D69D85;">"item1"</span>, <span style="color: #D69D85;">"value1"</span>, <span style="color: #4EC9B0;">TimeSpan</span>.<span style="color: #eded00;">FromMinutes</span>(<span style="color: #569CD6;">30</span>));<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cacheManager.<span style="color: #eded00;">AddItem</span>(<span style="color: #D69D85;">"item2"</span>, <span style="color: #D69D85;">"value2"</span>, <span style="color: #4EC9B0;">TimeSpan</span>.<span style="color: #eded00;">FromHours</span>(<span style="color: #569CD6;">1</span>));<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #608B4E;">// Start the cache cleanup task (runs in the background)</span><br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #569CD6;">await</span> cacheManager.<span style="color: #eded00;">StartCacheCleanupTask</span>(<span style="color: #4EC9B0;">TimeSpan</span>.<span style="color: #eded00;">FromMinutes</span>(<span style="color: #569CD6;">15</span>));<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #608B4E;">// Continue with other application tasks</span><br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #4EC9B0;">Console</span>.<span style="color: #eded00;">WriteLine</span>(<span style="color: #D69D85;">"Application is running..."</span>);<br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #4EC9B0;">Console</span>.<span style="color: #eded00;">ReadLine</span>();<br>
        &nbsp;&nbsp;&nbsp;}<br>
    }<br>
</div>

##### Let's see what a simple cache management in an application would look like:
<br>
##### <span style='color: #ffbd39'><b>Way #1</b> </span>: From the Debug menu, select Dev Tunnels and then Create a Tunnel.
<br>
![Create Dev Tunnel from Debug Menu](/images/blog/posts/how-to-put-localhost-online-in-visualstudio/create-dev-tunnel-from-debug-menu.jpg)
<br>
##### You should see a following window:
<br>
![Create Dev Tunnel from Debug Menu](/images/blog/posts/how-to-put-localhost-online-in-visualstudio/account-to-create-dev-tunnel.png)
<br>
##### Details:
<br>
##### <span style='color: #ffbd39'><b>• Account</b> </span>: Like I said, you should be logged in
##### <span style='color: #ffbd39'><b>• Name</b> </span>: Give a name for a tunnel
##### <span style='color: #ffbd39'><b>• Type</b> </span>:
##### - Temporary -  a new URL each time Visual Studio is started
##### - Permanent - the same URL each time Visual Studio is started. 
##### <span style='color: #ffbd39'><b>• Access</b> </span>:
##### - Private - accessible only to the account that created it
##### - Organization - The tunnel is accessible to accounts in the same organization as the one that created it. If this option is selected for a personal Microsoft account (MSA), the effect is the same as selecting Private. Organization support for GitHub accounts isn't supported. 
#####  - Public - No authentication required. 
<br>
##### <span style='color: #ffbd39'><b>Way #2</b> </span>: Modify the <span style='color: #ffbd39'><b>launchSettings.json</b> </span> file under Properties folder. Add the following code under https section: 
<br>
![Launch Settings Dev Tunnel](/images/blog/posts/how-to-put-localhost-online-in-visualstudio/launchsettings-dev-tunnels.png)
<br>
<br>
### Run application with Dev Tunnel
<br>
<br>

##### Now you can run the application with Dev Tunnel and be able to expose a localhost to the internet.
<br>
##### To do that, you just need to select a created tunnel.
<br>
![Run application with Dev Tunnel](/images/blog/posts/how-to-put-localhost-online-in-visualstudio/run-application-with-dev-tunnel.jpg)
<br>
##### When you run the application, you should see the following window:
<br>
![Run application with Dev Tunnel](/images/blog/posts/how-to-put-localhost-online-in-visualstudio/test-dev-tunnels.png)
<br>
##### And when you click on <span style='color: #ffbd39'><b>Continue</b> </span> button, you will see the full application like when you run it on localhost. But this one will have a public URL.

<br>
<br>
### What next?
<br>
<br>
##### Try to expose Azure functions - it's also possible.
<br>
##### That's all from me for today.
<br>
##### Make a coffee and try it on your projects.
<br>

## <b > dream BIG! </b>